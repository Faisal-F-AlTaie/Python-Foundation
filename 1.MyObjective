Python-Foundation: This is the Start of my Python Journey. All Projects Here are Easy-Medium in Difficulty and Revolve around familiarizing myself with the main concepts and syntax of Python credits and regards to the Youtuber Tech With Tim

Project 1: Rock Paper Scissors:
This Python script is a simple "Rock, Paper, Scissors" game where the player inputs their choice, and the computer randomly selects one as well. 
The game then compares the choices using the `check_win()` function to determine if the player wins, loses, or ties based on the standard rules 
(rock beats scissors, paper beats rock, and scissors beat paper). Finally, it prints the result of the match.


Project #2: Choose Your Adventure Mini Game;
This Python script is a simple text-based "Choose Your Own Adventure" (CYOA) game, where the player makes choices that affect the outcome of the story. The game begins by asking the player's name and age, only allowing those who are 18 or older to play. 
Players start with 10 health points, and as the game progresses, they are presented with a series of choices, such as going left or right, swimming across a lake or going around it, and choosing between visiting a house or a river. Depending on their 
choices, the player may lose health or survive and win the game. The goal is to make the right decisions to keep health points above zero and ultimately "win" by surviving through the scenarios presented.


Project 3: Black jack; 
Blackjack is a card game where the goal is to have a hand value closer to 21 than the dealer's without exceeding 21. Number cards hold their face value, face cards are worth 10, and Aces can be 1 or 11. Players are dealt two cards and can choose to "hit" for another card or "stand." 
The dealer must hit until their hand totals at least 17. A hand value over 21 is a bust, and a starting hand with 21 is called blackjack. The Python code for the game simulates this by creating a deck of cards and dealing them to the player and dealer. 
The `Hand` class calculates the hand value and determines whether the player or dealer wins, ties, or busts. The player can continue to hit or stand while the dealer plays according to the game rules, and the game loop checks for the final winner based on the hand values.


Project 4: Quiz Game;
Just A simple quiz game on simple computer terms/acronyms where the user hs to answer questions. I was just trying to get more comfterable with conditional statements such as if or else and, games like these are quick to make and are usful, as I want to fully complete one project
evrey single day to stay conistant with my development as a programmer!


Project 5: Timed Math Challange;
The code is a timed math challenge program where the user is presented with a series of arithmetic problems. It generates random problems using addition, subtraction, or multiplication with two random operands within a defined range. The user is given a total of 10 problems to solve. 
The program records the time taken to complete all problems and counts the number of incorrect attempts. At the end, it displays the total time taken to complete the challenge. This script provides a simple way to test and improve basic arithmetic skills under a timed condition.


Project 6: Kindergarden to Grade 12 Math Challange;
This code is a math challenge game designed to test users' math skills through four sections: Kindergarten, Elementary, Middle School, and High School. Each section generates random math problems based on the level of difficulty. In the Kindergarten section, simple addition problems 
are presented, while the Elementary section includes addition, subtraction, and multiplication. The Middle School section introduces more complex operations like square roots, exponentiation, and division. The High School section involves trigonometric functions, logarithms, and their 
reciprocals, all requiring input in radians, with answers rounded to two decimal places. For each problem, the user must input the correct answer to proceed, with incorrect answers prompting additional attempts. The game records the total time taken to complete all sections and displays 
it at the end. This challenge offers users a way to refresh and test their math skills progressively from basic arithmetic to advanced functions. This is my first jab at making a project for ME! Other projects in the foundation repository have been me learning from tutorials. This is the 
first project where I had to use my knowledge in python and what I learned from previous tutorials and make something semi-orignal. It was alot of trial and error, but I'm happy I came through! Notice how this project has similar functions to project 5, its just more applied (Note the other 
projects on this list will follow the same semi-orignal theme, applying my concepts from what i have learned from tutorials to make something semi-orignal). 


Project 7: Random Coin Flipper;
Simple Project that took less than 5 minutes to complete. Uploaded it to give myself a reason to stay consistant, and to keep pushimg towards bigger and better things!


Project 8: Random Coin Flipper Plotting;
I was not quite satasfied with the base "easiness" that I uploaded earlier. It was sad to see me go from a project like K-12 where I had to follow the usual proceure of programming: Research, Code, Debug, Edits, Repeat; to go to a simple one function program. I than decided to utalize my skills
and learned the libary of matplotlib which is straight forward to understand and execute as It's the computer doing the more tedious and strainful work of graphing the results. I applied this libary to my coin flipper project which allows a user to select how many flips they want to generate and than
see the probality displayed on a simple bar graph.
